-- MySQL Script generated by MySQL Workbench
-- 11/16/17 13:21:54
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema inschrijfmodule
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema inschrijfmodule
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `inschrijfmodule` DEFAULT CHARACTER SET utf8 ;
USE `inschrijfmodule` ;

-- -----------------------------------------------------
-- Table `inschrijfmodule`.`evenement_soort`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`evenement_soort` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`evenement_soort` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `onderwerp` VARCHAR(255) NULL,
  `omschrijving` TEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`locatie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`locatie` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`locatie` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `locatie` VARCHAR(255) NULL,
  `lokaalnummer` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`adres`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`adres` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`adres` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `straat` VARCHAR(255) NOT NULL,
  `huisnummer` VARCHAR(255) NULL,
  `postcode` VARCHAR(255) NOT NULL,
  `plaatsnaam` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`evenement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`evenement` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`evenement` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `evenement_soort_id` INT NOT NULL,
  `locatie_id` INT NULL,
  `adres_id` INT NULL,
  `titel` VARCHAR(255) NOT NULL,
  `datum` DATE NOT NULL,
  `vervoer` VARCHAR(255) NULL,
  `tijd` TIME NOT NULL,
  `min_leerlingen` INT UNSIGNED NULL,
  `max_leerlingen` INT UNSIGNED NULL,
  `open_gesloten` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_evenement_evenement_soort1_idx` (`evenement_soort_id` ASC),
  INDEX `fk_evenement_locatie1_idx` (`locatie_id` ASC),
  INDEX `fk_evenement_adres1_idx` (`adres_id` ASC),
  CONSTRAINT `fk_evenement_evenement_soort1`
    FOREIGN KEY (`evenement_soort_id`)
    REFERENCES `inschrijfmodule`.`evenement_soort` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evenement_locatie1`
    FOREIGN KEY (`locatie_id`)
    REFERENCES `inschrijfmodule`.`locatie` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evenement_adres1`
    FOREIGN KEY (`adres_id`)
    REFERENCES `inschrijfmodule`.`adres` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`foto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`foto` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`foto` (
  `id` INT NOT NULL,
  `evenement_id` INT NOT NULL,
  `bestandsnaam` VARCHAR(255) NULL,
  `opmerking` VARCHAR(45) NULL,
  `titel` VARCHAR(45) NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_foto_evenement1_idx` (`evenement_id` ASC),
  CONSTRAINT `fk_foto_evenement1`
    FOREIGN KEY (`evenement_id`)
    REFERENCES `inschrijfmodule`.`evenement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`opleiding`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`opleiding` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`opleiding` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `opleiding` VARCHAR(255) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`bedrijf`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`bedrijf` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`bedrijf` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `bedrijf_id` INT NULL,
  `adres_id` INT NOT NULL,
  `functie_contactpersoon` VARCHAR(255) NULL,
  `naam onderneming` VARCHAR(45) NULL,
  `webadres` VARCHAR(45) NULL,
  `branch` VARCHAR(255) NULL,
  `telefoonnummer` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_bedrijf_bedrijf1_idx` (`bedrijf_id` ASC),
  INDEX `fk_bedrijf_adres1_idx` (`adres_id` ASC),
  CONSTRAINT `fk_bedrijf_bedrijf1`
    FOREIGN KEY (`bedrijf_id`)
    REFERENCES `inschrijfmodule`.`bedrijf` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bedrijf_adres1`
    FOREIGN KEY (`adres_id`)
    REFERENCES `inschrijfmodule`.`adres` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`gebruiker`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`gebruiker` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`gebruiker` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `adres_id` INT NULL,
  `bedrijf_id` INT NULL,
  `docent_id` INT NULL,
  `studentcode` VARCHAR(255) NULL,
  `roepnaam` VARCHAR(255) NULL,
  `voorvoegsel` VARCHAR(45) NULL,
  `achternaam` VARCHAR(255) NULL,
  `email` VARCHAR(45) NULL,
  `gebruikersnaam` VARCHAR(255) NULL,
  `wachtwoord` VARCHAR(255) NULL,
  `geboortedatum` DATE NULL,
  `afkorting` VARCHAR(45) NULL,
  `geslacht` CHAR(20) NULL,
  `opleiding_start` DATE NULL,
  `opleiding_eind` DATE NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_gebruiker_adres1_idx` (`adres_id` ASC),
  INDEX `fk_gebruiker_bedrijf1_idx` (`bedrijf_id` ASC),
  CONSTRAINT `fk_gebruiker_adres1`
    FOREIGN KEY (`adres_id`)
    REFERENCES `inschrijfmodule`.`adres` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_gebruiker_bedrijf1`
    FOREIGN KEY (`bedrijf_id`)
    REFERENCES `inschrijfmodule`.`bedrijf` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`klas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`klas` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`klas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `klas` VARCHAR(255) NULL,
  `leerjaar` VARCHAR(255) NULL,
  `opleiding_id` INT NOT NULL,
  `gebruiker_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_klas_opleiding1_idx` (`opleiding_id` ASC),
  INDEX `fk_klas_gebruiker1_idx` (`gebruiker_id` ASC),
  CONSTRAINT `fk_klas_opleiding1`
    FOREIGN KEY (`opleiding_id`)
    REFERENCES `inschrijfmodule`.`opleiding` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_klas_gebruiker1`
    FOREIGN KEY (`gebruiker_id`)
    REFERENCES `inschrijfmodule`.`gebruiker` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`beoordeling`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`beoordeling` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`beoordeling` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `gebruiker_id` INT NOT NULL,
  `evenement_id` INT NOT NULL,
  `score` INT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_beoordeling_gebruiker1_idx` (`gebruiker_id` ASC),
  INDEX `fk_beoordeling_evenement1_idx` (`evenement_id` ASC),
  CONSTRAINT `fk_beoordeling_gebruiker1`
    FOREIGN KEY (`gebruiker_id`)
    REFERENCES `inschrijfmodule`.`gebruiker` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_beoordeling_evenement1`
    FOREIGN KEY (`evenement_id`)
    REFERENCES `inschrijfmodule`.`evenement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`rol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`rol` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`rol` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `naam` VARCHAR(255) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`recht`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`recht` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`recht` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `naam` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`vragenlijst`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`vragenlijst` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`vragenlijst` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `evenement_soort_id` INT NOT NULL,
  `naam` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_vragenlijst_evenement_soort1_idx` (`evenement_soort_id` ASC),
  CONSTRAINT `fk_vragenlijst_evenement_soort1`
    FOREIGN KEY (`evenement_soort_id`)
    REFERENCES `inschrijfmodule`.`evenement_soort` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`vraag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`vraag` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`vraag` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `vragenlijst_id` INT NULL,
  `vraag` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_vraag_vragenlijst1_idx` (`vragenlijst_id` ASC),
  CONSTRAINT `fk_vraag_vragenlijst1`
    FOREIGN KEY (`vragenlijst_id`)
    REFERENCES `inschrijfmodule`.`vragenlijst` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`antwoord`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`antwoord` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`antwoord` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `vraag_id` INT NULL,
  `antwoord` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_antwoord_vraag_idx` (`vraag_id` ASC),
  CONSTRAINT `fk_antwoord_vraag`
    FOREIGN KEY (`vraag_id`)
    REFERENCES `inschrijfmodule`.`vraag` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`inschrijving`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`inschrijving` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`inschrijving` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `gebruiker_id` INT NOT NULL,
  `evenement_id` INT NOT NULL,
  `whitelisted` TINYINT NULL,
  `inschrijving_at` DATETIME NULL DEFAULT NULL,
  `present_at` DATETIME NULL,
  `opmerking` TEXT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_inschrijving_gebruiker1_idx` (`gebruiker_id` ASC),
  INDEX `fk_inschrijving_evenement1_idx` (`evenement_id` ASC),
  CONSTRAINT `fk_inschrijving_gebruiker1`
    FOREIGN KEY (`gebruiker_id`)
    REFERENCES `inschrijfmodule`.`gebruiker` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_inschrijving_evenement1`
    FOREIGN KEY (`evenement_id`)
    REFERENCES `inschrijfmodule`.`evenement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`gebruiker_heeft_rol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`gebruiker_heeft_rol` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`gebruiker_heeft_rol` (
  `gebruiker_id` INT NOT NULL,
  `rol_id` INT NOT NULL,
  PRIMARY KEY (`gebruiker_id`, `rol_id`),
  INDEX `fk_gebruiker_has_rol_rol1_idx` (`rol_id` ASC),
  INDEX `fk_gebruiker_has_rol_gebruiker1_idx` (`gebruiker_id` ASC),
  CONSTRAINT `fk_gebruiker_has_rol_gebruiker1`
    FOREIGN KEY (`gebruiker_id`)
    REFERENCES `inschrijfmodule`.`gebruiker` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_gebruiker_has_rol_rol1`
    FOREIGN KEY (`rol_id`)
    REFERENCES `inschrijfmodule`.`rol` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`rol_heeft_recht`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`rol_heeft_recht` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`rol_heeft_recht` (
  `rol_id` INT NOT NULL,
  `recht_id` INT NOT NULL,
  PRIMARY KEY (`rol_id`, `recht_id`),
  INDEX `fk_rol_has_recht_recht1_idx` (`recht_id` ASC),
  INDEX `fk_rol_has_recht_rol1_idx` (`rol_id` ASC),
  CONSTRAINT `fk_rol_has_recht_rol1`
    FOREIGN KEY (`rol_id`)
    REFERENCES `inschrijfmodule`.`rol` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rol_has_recht_recht1`
    FOREIGN KEY (`recht_id`)
    REFERENCES `inschrijfmodule`.`recht` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`Inventarisatieformulier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`Inventarisatieformulier` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`Inventarisatieformulier` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `vraag` TEXT NOT NULL,
  `opmerking` TEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`bedrijf_has_Inventarisatieformulier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`bedrijf_has_Inventarisatieformulier` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`bedrijf_has_Inventarisatieformulier` (
  `bedrijf_id` INT NOT NULL,
  `Inventarisatieformulier_id` INT NOT NULL,
  `antwoord` TEXT NULL,
  PRIMARY KEY (`bedrijf_id`, `Inventarisatieformulier_id`),
  INDEX `fk_bedrijf_has_Inventarisatieformulier_Inventarisatieformul_idx` (`Inventarisatieformulier_id` ASC),
  INDEX `fk_bedrijf_has_Inventarisatieformulier_bedrijf1_idx` (`bedrijf_id` ASC),
  CONSTRAINT `fk_bedrijf_has_Inventarisatieformulier_bedrijf1`
    FOREIGN KEY (`bedrijf_id`)
    REFERENCES `inschrijfmodule`.`bedrijf` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bedrijf_has_Inventarisatieformulier_Inventarisatieformulier1`
    FOREIGN KEY (`Inventarisatieformulier_id`)
    REFERENCES `inschrijfmodule`.`Inventarisatieformulier` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inschrijfmodule`.`foto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inschrijfmodule`.`foto` ;

CREATE TABLE IF NOT EXISTS `inschrijfmodule`.`foto` (
  `id` INT NOT NULL,
  `evenement_id` INT NOT NULL,
  `bestandsnaam` VARCHAR(255) NULL,
  `opmerking` VARCHAR(45) NULL,
  `titel` VARCHAR(45) NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_foto_evenement1_idx` (`evenement_id` ASC),
  CONSTRAINT `fk_foto_evenement1`
    FOREIGN KEY (`evenement_id`)
    REFERENCES `inschrijfmodule`.`evenement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
